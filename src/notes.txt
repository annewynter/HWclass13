Instance variables:
variables which are declared outside a method, loop, constaructor or
a block of code, but inside a class without static keyword are called
instant variables.
we call them instance variables, because for each object of that class a new copy
of the variables is created in memory.
when to use:
when a value is expected to change from object to object we should declare an instance
variable for those values.
Static variables:
instance variables with a static keyword are called static variables.
They are called class level variables because their value is same across all the
objects and only one memory allocation is occupaied from the main memory.
When should we use it:
when a value is expected to stay the same, when we have to share something
across all the objects - we should store this info in a static variable.
Mostly it's used as constance.
As a good practice we should access it using the class names.

Local variables:
variables which are declared inside a method or loop or switcj case or any block of
code are called local variables.
we cannot use static keyword with local variables.
Local variables occupy the memory in computer for the shortest period of
time.

Static methods:
we can have static methods as well but static methods cannot access instance
variables while not static methods can access static as well as not
static or instance variables.

Java class17
+++++++++++++++++

Access modification is done in Java with the help of three keywords
1) private
2) protected
3) public
4) default (it's not a keyword, if we do not use any keyword with fields/methods, default access is given to that field/method

***Private****
 is the most restricted one we can only access private fields or methods if we are inside the
same class

**DeFault***
works only and only inside same package. Default access is applicable to that member automatically
When defaults access is given to something. That member is only accessible within the same class and same package.
You cannot access it in another package

***public***
Can be accessed within same class, package, different packages within same Project!This class is the least restricted one.

***Protected Access Modifier****
if something is protected it's available inside the same class, same package. It's available with the restrictions.
it's a keyword, and it works differently from other access modifiers.
if we are using a protected keyword we can access that member inside the same class with or without creating an object.
Depends on if we are in static method or instance method.
In order to access protected modifier in different package we need to.





